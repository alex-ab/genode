build "core init timer server/cpu_scheduler app/cpu_burner app/top"

set cpu_width  4
set cpu_height 1
set report_config "yes"
set use_trace "yes"

create_boot_directory

import_from_depot [depot_user]/src/report_rom

append config {
<config prio_levels="2">
	<affinity-space width="} $cpu_width {" height="} $cpu_height {"/>
	<parent-provides>
		<service name="LOG"/>
		<service name="CPU"/>
		<service name="ROM"/>
		<service name="PD"/>
		<service name="IO_PORT"/> <!-- timer on some kernels -->
		<service name="IRQ"/>     <!-- timer on some kernels -->
		<service name="TRACE"/>
	</parent-provides>

	<default-route>
		<service name="LOG"> <parent/> </service>
		<service name="PD"> <parent/> </service>
		<service name="ROM"> <parent/> </service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>}

append_if [expr $report_config eq "yes"] config {
	<start name="report_rom">
		<binary name="report_rom"/>
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="no">
		</config>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>}

append config {
	<start name="cpu_scheduler">
<!--		<affinity xpos="1" ypos="0" width="2" height="1"/> -->
		<resource name="RAM" quantum="2M"/>
		<provides><service name="CPU"/></provides>
		<config interval_us="2000000"
		        report="} $report_config {"
		        trace="} $use_trace {"
		        verbose="yes">
			<component label="cpu_burner">
<!--
				<thread name="signal handler" policy="pin" xpos="1" ypos="0"/>
-->
				<thread name="ep"             policy="none"/>
				<thread name="signal handler" policy="max-utilize"/>
				<thread name="cpu_burner"     policy="round-robin"/>
			</component>
		</config>
		<route>
			<service name="Timer">  <child name="timer"/> </service>
			<service name="Report"> <child name="report_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="cpu_burner" priority="-1">
		<affinity xpos="1" ypos="0" width="2" height="1"/>
		<resource name="RAM" quantum="2M"/>
		<route>
			<service name="CPU"> <child name="cpu_scheduler"/> </service>
			<service name="Timer"> <child name="timer"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
	<start name="top">
		<resource name="RAM" quantum="2M"/>
		<route>
			<service name="Timer"> <child name="timer"/> </service>
			<service name="CPU"> <child name="cpu_scheduler"/> </service>
<!--
-->
			<any-service> <parent/> </any-service>
		</route>
	</start>
</config>}

install_config $config

build_boot_image { core ld.lib.so init timer cpu_scheduler cpu_burner top }

append qemu_args " -nographic"
append qemu_args " -smp [expr $cpu_width * $cpu_height],cores=$cpu_width,threads=$cpu_height"

run_genode_until forever
